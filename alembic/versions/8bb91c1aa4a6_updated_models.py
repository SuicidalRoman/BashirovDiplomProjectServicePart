"""updated models

Revision ID: 8bb91c1aa4a6
Revises: 9ac23f0ca362
Create Date: 2024-06-05 20:55:22.529558

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8bb91c1aa4a6'
down_revision: Union[str, None] = '9ac23f0ca362'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('event_type', sa.Enum('CONFERENCE', 'EXHIBITION', name='eventtype'), nullable=False),
    sa.Column('start_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.request_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('registrations',
    sa.Column('registration_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('REGISTERED', 'ATTENDED', 'CANCELLED', name='registrationstatus'), nullable=False),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.profile_id'], ),
    sa.PrimaryKeyConstraint('registration_id')
    )
    op.add_column('requests', sa.Column('request_description', sa.String(), nullable=True))
    op.add_column('requests', sa.Column('event_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'requests', 'events', ['event_id'], ['event_id'])
    op.drop_column('requests', 'event_title')
    op.drop_column('requests', 'event_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('requests', sa.Column('event_type', postgresql.ENUM('CONFERENCE', 'EXHIBITION', name='eventtype'), autoincrement=False, nullable=False))
    op.add_column('requests', sa.Column('event_title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.drop_column('requests', 'event_id')
    op.drop_column('requests', 'request_description')
    op.drop_table('registrations')
    op.drop_table('events')
    # ### end Alembic commands ###
